{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Victus\\\\OneDrive\\\\Desktop\\\\collab-whiteboard\\\\client\\\\src\\\\pages\\\\Whiteboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst Whiteboard = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const [color, setColor] = useState('#000000');\n  const [tool, setTool] = useState('pen');\n  const [drawing, setDrawing] = useState(false);\n  const [participants, setParticipants] = useState([]);\n  const [username, setUsername] = useState('');\n  const [roomId, setRoomId] = useState('');\n  const [isPrivate, setIsPrivate] = useState(false);\n  const [password, setPassword] = useState('');\n  const [myStrokes, setMyStrokes] = useState([]);\n  const [redoStack, setRedoStack] = useState([]);\n  const startX = useRef(0);\n  const startY = useRef(0);\n  const {\n    room\n  } = useParams();\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = window.innerWidth - 40;\n    canvas.height = window.innerHeight - 150;\n    const ctx = canvas.getContext('2d');\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = color;\n    ctx.lineWidth = 2;\n    ctxRef.current = ctx;\n  }, []);\n  useEffect(() => {\n    if (!room) {\n      const newRoomId = uuidv4();\n      setRoomId(newRoomId);\n      socket.emit('create-room', {\n        roomId: newRoomId,\n        isPrivate,\n        password\n      });\n    } else {\n      setRoomId(room);\n      socket.emit('join-room', {\n        roomId: room,\n        username,\n        password\n      });\n    }\n    socket.on('users-update', users => setParticipants(users));\n    socket.on('draw', ({\n      x0,\n      y0,\n      x1,\n      y1,\n      color\n    }) => {\n      drawLine(x0, y0, x1, y1, color, false, false);\n    });\n    socket.on('undo', () => {\n      setMyStrokes(prev => {\n        const updated = [...prev];\n        updated.pop();\n        redrawFromStrokes(updated);\n        return updated;\n      });\n    });\n    socket.on('redo', stroke => {\n      drawLine(stroke.x0, stroke.y0, stroke.x1, stroke.y1, stroke.color, false, false);\n      setMyStrokes(prev => [...prev, stroke]);\n    });\n    socket.on('clear-canvas', () => {\n      ctxRef.current.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      setMyStrokes([]);\n      setRedoStack([]);\n    });\n  }, [room]);\n  const startDraw = ({\n    nativeEvent\n  }) => {\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    startX.current = offsetX;\n    startY.current = offsetY;\n    setDrawing(true);\n  };\n  const finishDraw = ({\n    nativeEvent\n  }) => {\n    if (!drawing) return;\n    setDrawing(false);\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    handleDraw(startX.current, startY.current, offsetX, offsetY, true);\n  };\n  const draw = ({\n    nativeEvent\n  }) => {\n    if (!drawing || tool !== 'pen' && tool !== 'eraser') return;\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    handleDraw(startX.current, startY.current, offsetX, offsetY, true);\n    startX.current = offsetX;\n    startY.current = offsetY;\n  };\n  const handleDraw = (x0, y0, x1, y1, emit = true) => {\n    let col = tool === 'eraser' ? '#ffffff' : color;\n    drawLine(x0, y0, x1, y1, col, emit);\n  };\n  const drawLine = (x0, y0, x1, y1, color, emit, save = true) => {\n    const ctx = ctxRef.current;\n    ctx.strokeStyle = color;\n    ctx.beginPath();\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(x1, y1);\n    ctx.stroke();\n    ctx.closePath();\n    if (save) setMyStrokes(prev => [...prev, {\n      x0,\n      y0,\n      x1,\n      y1,\n      color\n    }]);\n    if (emit) socket.emit('draw', {\n      x0,\n      y0,\n      x1,\n      y1,\n      color\n    });\n  };\n  const redrawFromStrokes = strokes => {\n    const ctx = ctxRef.current;\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    strokes.forEach(s => drawLine(s.x0, s.y0, s.x1, s.y1, s.color, false, false));\n  };\n  const drawShape = type => {\n    const ctx = ctxRef.current;\n    const x = startX.current;\n    const y = startY.current;\n    const size = 100;\n    ctx.strokeStyle = color;\n    ctx.beginPath();\n    if (type === 'rect') ctx.strokeRect(x, y, size, size);else if (type === 'circle') ctx.arc(x, y, size / 2, 0, Math.PI * 2);else if (type === 'heart') {\n      ctx.moveTo(x, y);\n      ctx.bezierCurveTo(x + 25, y - 25, x + 75, y + 25, x, y + 75);\n      ctx.bezierCurveTo(x - 75, y + 25, x - 25, y - 25, x, y);\n    }\n    ctx.stroke();\n    ctx.closePath();\n  };\n  const handleUndo = () => {\n    if (myStrokes.length === 0) return;\n    const updated = [...myStrokes];\n    const last = updated.pop();\n    setMyStrokes(updated);\n    setRedoStack(prev => [...prev, last]);\n    redrawFromStrokes(updated);\n    socket.emit('undo');\n  };\n  const handleRedo = () => {\n    if (redoStack.length === 0) return;\n    const stroke = redoStack.pop();\n    setRedoStack([...redoStack]);\n    setMyStrokes(prev => [...prev, stroke]);\n    drawLine(stroke.x0, stroke.y0, stroke.x1, stroke.y1, stroke.color, true, false);\n    socket.emit('redo', stroke);\n  };\n  const clearCanvas = () => {\n    ctxRef.current.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    setMyStrokes([]);\n    setRedoStack([]);\n    socket.emit('clear-canvas');\n  };\n  const exportImage = () => {\n    const url = canvasRef.current.toDataURL('image/png');\n    const link = document.createElement('a');\n    link.download = 'whiteboard.png';\n    link.href = url;\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83E\\uDDD1\\u200D\\uD83C\\uDFA8 Collaborative Whiteboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Username\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Room Password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTool('pen'),\n        children: \"Pen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTool('eraser'),\n        children: \"Eraser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => drawShape('rect'),\n        children: \"Rectangle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => drawShape('circle'),\n        children: \"Circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => drawShape('heart'),\n        children: \"\\u2764\\uFE0F Heart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTool('text'),\n        children: \"Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        onChange: e => setColor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUndo,\n        children: \"\\u21A9 Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRedo,\n        children: \"\\u21AA Redo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearCanvas,\n        children: \"\\uD83E\\uDDF9 Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportImage,\n        children: \"\\uD83D\\uDCE4 Export\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onMouseDown: startDraw,\n      onMouseUp: finishDraw,\n      onMouseMove: draw,\n      style: {\n        border: '2px solid black',\n        backgroundColor: 'white',\n        cursor: 'crosshair'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83D\\uDC65 Participants:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: participants.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: user\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 46\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(Whiteboard, \"62cCicw7GesSZ+01ljpzVLNLrhg=\", false, function () {\n  return [useParams];\n});\n_c = Whiteboard;\nexport default Whiteboard;\nvar _c;\n$RefreshReg$(_c, \"Whiteboard\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","io","v4","uuidv4","jsxDEV","_jsxDEV","socket","Whiteboard","_s","canvasRef","ctxRef","color","setColor","tool","setTool","drawing","setDrawing","participants","setParticipants","username","setUsername","roomId","setRoomId","isPrivate","setIsPrivate","password","setPassword","myStrokes","setMyStrokes","redoStack","setRedoStack","startX","startY","room","canvas","current","width","window","innerWidth","height","innerHeight","ctx","getContext","lineCap","strokeStyle","lineWidth","newRoomId","emit","on","users","x0","y0","x1","y1","drawLine","prev","updated","pop","redrawFromStrokes","stroke","clearRect","startDraw","nativeEvent","offsetX","offsetY","finishDraw","handleDraw","draw","col","save","beginPath","moveTo","lineTo","closePath","strokes","forEach","s","drawShape","type","x","y","size","strokeRect","arc","Math","PI","bezierCurveTo","handleUndo","length","last","handleRedo","clearCanvas","exportImage","url","toDataURL","link","document","createElement","download","href","click","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","value","margin","onClick","ref","onMouseDown","onMouseUp","onMouseMove","border","backgroundColor","cursor","map","user","index","_c","$RefreshReg$"],"sources":["C:/Users/Victus/OneDrive/Desktop/collab-whiteboard/client/src/pages/Whiteboard.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst Whiteboard = () => {\r\n  const canvasRef = useRef(null);\r\n  const ctxRef = useRef(null);\r\n  const [color, setColor] = useState('#000000');\r\n  const [tool, setTool] = useState('pen');\r\n  const [drawing, setDrawing] = useState(false);\r\n  const [participants, setParticipants] = useState([]);\r\n  const [username, setUsername] = useState('');\r\n  const [roomId, setRoomId] = useState('');\r\n  const [isPrivate, setIsPrivate] = useState(false);\r\n  const [password, setPassword] = useState('');\r\n  const [myStrokes, setMyStrokes] = useState([]);\r\n  const [redoStack, setRedoStack] = useState([]);\r\n  const startX = useRef(0);\r\n  const startY = useRef(0);\r\n\r\n  const { room } = useParams();\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    canvas.width = window.innerWidth - 40;\r\n    canvas.height = window.innerHeight - 150;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.lineCap = 'round';\r\n    ctx.strokeStyle = color;\r\n    ctx.lineWidth = 2;\r\n    ctxRef.current = ctx;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!room) {\r\n      const newRoomId = uuidv4();\r\n      setRoomId(newRoomId);\r\n      socket.emit('create-room', { roomId: newRoomId, isPrivate, password });\r\n    } else {\r\n      setRoomId(room);\r\n      socket.emit('join-room', { roomId: room, username, password });\r\n    }\r\n\r\n    socket.on('users-update', (users) => setParticipants(users));\r\n\r\n    socket.on('draw', ({ x0, y0, x1, y1, color }) => {\r\n      drawLine(x0, y0, x1, y1, color, false, false);\r\n    });\r\n\r\n    socket.on('undo', () => {\r\n      setMyStrokes(prev => {\r\n        const updated = [...prev];\r\n        updated.pop();\r\n        redrawFromStrokes(updated);\r\n        return updated;\r\n      });\r\n    });\r\n\r\n    socket.on('redo', (stroke) => {\r\n      drawLine(stroke.x0, stroke.y0, stroke.x1, stroke.y1, stroke.color, false, false);\r\n      setMyStrokes(prev => [...prev, stroke]);\r\n    });\r\n\r\n    socket.on('clear-canvas', () => {\r\n      ctxRef.current.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n      setMyStrokes([]);\r\n      setRedoStack([]);\r\n    });\r\n  }, [room]);\r\n\r\n  const startDraw = ({ nativeEvent }) => {\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    startX.current = offsetX;\r\n    startY.current = offsetY;\r\n    setDrawing(true);\r\n  };\r\n\r\n  const finishDraw = ({ nativeEvent }) => {\r\n    if (!drawing) return;\r\n    setDrawing(false);\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    handleDraw(startX.current, startY.current, offsetX, offsetY, true);\r\n  };\r\n\r\n  const draw = ({ nativeEvent }) => {\r\n    if (!drawing || (tool !== 'pen' && tool !== 'eraser')) return;\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    handleDraw(startX.current, startY.current, offsetX, offsetY, true);\r\n    startX.current = offsetX;\r\n    startY.current = offsetY;\r\n  };\r\n\r\n  const handleDraw = (x0, y0, x1, y1, emit = true) => {\r\n    let col = tool === 'eraser' ? '#ffffff' : color;\r\n    drawLine(x0, y0, x1, y1, col, emit);\r\n  };\r\n\r\n  const drawLine = (x0, y0, x1, y1, color, emit, save = true) => {\r\n    const ctx = ctxRef.current;\r\n    ctx.strokeStyle = color;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x0, y0);\r\n    ctx.lineTo(x1, y1);\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n\r\n    if (save) setMyStrokes(prev => [...prev, { x0, y0, x1, y1, color }]);\r\n\r\n    if (emit) socket.emit('draw', { x0, y0, x1, y1, color });\r\n  };\r\n\r\n  const redrawFromStrokes = (strokes) => {\r\n    const ctx = ctxRef.current;\r\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n    strokes.forEach(s => drawLine(s.x0, s.y0, s.x1, s.y1, s.color, false, false));\r\n  };\r\n\r\n  const drawShape = (type) => {\r\n    const ctx = ctxRef.current;\r\n    const x = startX.current;\r\n    const y = startY.current;\r\n    const size = 100;\r\n    ctx.strokeStyle = color;\r\n    ctx.beginPath();\r\n    if (type === 'rect') ctx.strokeRect(x, y, size, size);\r\n    else if (type === 'circle') ctx.arc(x, y, size / 2, 0, Math.PI * 2);\r\n    else if (type === 'heart') {\r\n      ctx.moveTo(x, y);\r\n      ctx.bezierCurveTo(x + 25, y - 25, x + 75, y + 25, x, y + 75);\r\n      ctx.bezierCurveTo(x - 75, y + 25, x - 25, y - 25, x, y);\r\n    }\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n  };\r\n\r\n  const handleUndo = () => {\r\n    if (myStrokes.length === 0) return;\r\n    const updated = [...myStrokes];\r\n    const last = updated.pop();\r\n    setMyStrokes(updated);\r\n    setRedoStack(prev => [...prev, last]);\r\n    redrawFromStrokes(updated);\r\n    socket.emit('undo');\r\n  };\r\n\r\n  const handleRedo = () => {\r\n    if (redoStack.length === 0) return;\r\n    const stroke = redoStack.pop();\r\n    setRedoStack([...redoStack]);\r\n    setMyStrokes(prev => [...prev, stroke]);\r\n    drawLine(stroke.x0, stroke.y0, stroke.x1, stroke.y1, stroke.color, true, false);\r\n    socket.emit('redo', stroke);\r\n  };\r\n\r\n  const clearCanvas = () => {\r\n    ctxRef.current.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n    setMyStrokes([]);\r\n    setRedoStack([]);\r\n    socket.emit('clear-canvas');\r\n  };\r\n\r\n  const exportImage = () => {\r\n    const url = canvasRef.current.toDataURL('image/png');\r\n    const link = document.createElement('a');\r\n    link.download = 'whiteboard.png';\r\n    link.href = url;\r\n    link.click();\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <h2>🧑‍🎨 Collaborative Whiteboard</h2>\r\n      <div>\r\n        <input placeholder=\"Username\" onChange={(e) => setUsername(e.target.value)} />\r\n        <input placeholder=\"Room Password\" onChange={(e) => setPassword(e.target.value)} />\r\n      </div>\r\n      <div style={{ margin: '10px' }}>\r\n        <button onClick={() => setTool('pen')}>Pen</button>\r\n        <button onClick={() => setTool('eraser')}>Eraser</button>\r\n        <button onClick={() => drawShape('rect')}>Rectangle</button>\r\n        <button onClick={() => drawShape('circle')}>Circle</button>\r\n        <button onClick={() => drawShape('heart')}>❤️ Heart</button>\r\n        <button onClick={() => setTool('text')}>Text</button>\r\n        <input type=\"color\" onChange={(e) => setColor(e.target.value)} />\r\n        <button onClick={handleUndo}>↩ Undo</button>\r\n        <button onClick={handleRedo}>↪ Redo</button>\r\n        <button onClick={clearCanvas}>🧹 Clear</button>\r\n        <button onClick={exportImage}>📤 Export</button>\r\n      </div>\r\n      <canvas\r\n        ref={canvasRef}\r\n        onMouseDown={startDraw}\r\n        onMouseUp={finishDraw}\r\n        onMouseMove={draw}\r\n        style={{ border: '2px solid black', backgroundColor: 'white', cursor: 'crosshair' }}\r\n      />\r\n      <div>\r\n        <h4>👥 Participants:</h4>\r\n        <ul>\r\n          {participants.map((user, index) => <li key={index}>{user}</li>)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Whiteboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}